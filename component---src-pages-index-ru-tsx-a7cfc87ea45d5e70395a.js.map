{"version":3,"sources":["webpack:///./src/images/logo.png","webpack:///./src/pages/index.ru.tsx","webpack:///./src/components/FeatureList.module.css","webpack:///./src/components/Header.tsx","webpack:///./src/components/FeaturesList.tsx","webpack:///./src/components/HomePage.tsx","webpack:///./src/components/UsageSection.tsx"],"names":["module","exports","IndexPage","location","defaultLang","title","home","ru","description","Header","homeRef","React","language","useStateMachine","state","currentLanguage","setting","lightMode","play","className","styles","head","id","sequenceIndex","duration","start","transform","opacity","end","easeType","render","style","src","logo","alt","typographyStyles","heading","logoHeading","subHeading","marginBottom","maxWidth","slogan","minWidth","textAlign","buttonStyles","primaryButton","onClick","url","href","history","replaceState","getStarted","props","keyframes","0","50","70","100","fillMode","isPlayFeature","features","generic","featuresContent","lightFeaturesContent","margin","display","width","height","border","borderRadius","alignItems","justifyContent","marginTop","lineHeight","fontSize","color","fontWeight","viewBox","d","useState","useRef","useEffect","options","rootMargin","threshold","showBuilder","toggleBuilder","HomeRef","setFeaturePlay","isPlayCodeCompare","setCodeComparePlay","isIsolatePlay","setIsolatePlay","isCardPlay","isPlayRender","setRenderPlay","setFormUpdated","search","startsWith","setTimeout","current","scrollIntoView","behavior","IntersectionObserver","featureList","document","querySelector","codeComparison","rendering","isolate","observer","entries","forEach","entry","isIntersecting","target","observe","disconnect","root","UsageSection","ref","containerStyles","centerContent","h1","findInteresting","buttonsGroup","navigate","translateLink","getStartedWithTemplates","getStartedWithExamples","Footer","usage","description1","installCode","lightInstallCode","copyButton","copyClipBoard","alert","copied","codeAreaStyles","copyIcon","copy","description2"],"mappings":"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","file":"component---src-pages-index-ru-tsx-a7cfc87ea45d5e70395a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/logo-7f78ec48706a69d0ced32e9bb6b355ba.png\";","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Home from \"../components/HomePage\"\nimport home from \"../data/home\"\n\nconst IndexPage = ({\n  location,\n}: {\n  location: {\n    search: string\n    pathname: string\n  }\n}) => (\n  <Layout location={location} defaultLang=\"ru\">\n    <Seo\n      title={home.title.ru}\n      description={home.description.ru}\n      location={location}\n    />\n    <Home location={location} defaultLang=\"ru\" />\n  </Layout>\n)\n\nexport default IndexPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"featuresContent\":\"FeatureList-module--featuresContent--25_gU\",\"lightFeaturesContent\":\"FeatureList-module--lightFeaturesContent--3i0F4\",\"features\":\"FeatureList-module--features--1arbN\"};","import * as React from \"react\"\nimport { Animate, AnimateGroup } from \"react-simple-animate\"\nimport { navigate } from \"@reach/router\"\nimport Bday from \"./Bday\"\n// @ts-ignore\nimport home from \"../data/home\"\nimport { useStateMachine } from \"little-state-machine\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./Header.module.css\"\nimport logo from \"../images/logo.png\"\n\nexport default function Header({\n  homeRef,\n  defaultLang,\n}: // isCardPlay,\n{\n  homeRef: React.Ref<HTMLDivElement>\n  defaultLang: string\n  // isCardPlay: boolean\n}) {\n  const [isWeb, setIsWeb] = React.useState(true)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const {\n    state\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n  const lightMode = state?.setting?.lightMode\n\n  return (\n    <>\n      <AnimateGroup play>\n        <header className={styles.head} id=\"main\">\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <img\n                src={logo}\n                className={styles.logo} style={style}\n                alt=\"Create Next App\"\n              />\n            )}\n          />\n\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <h1\n                className={`${typographyStyles.heading} ${styles.logoHeading}`}\n                style={style}\n              >\n                Create Next App\n              </h1>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={1}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <p\n                className={typographyStyles.subHeading}\n                style={{ marginBottom: 0, maxWidth: 660, ...style }}\n              >\n                {home.slogan[currentLanguage]}\n              </p>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <div\n                style={{\n                  ...style,\n                  minWidth: 300,\n                  textAlign: 'center',\n                }}\n              >\n                <button\n                  className={buttonStyles.primaryButton}\n                  onClick={() => {\n                    // navigate(translateLink(\"get-started\", currentLanguage))\n                    let url = location.href\n                    location.href = \"#installation\"\n                    history.replaceState(null, null, url)\n                  }}\n                >\n                  {home.getStarted[currentLanguage]} &nbsp;<span>▶</span>\n                </button>\n              </div>\n            )}\n          />\n        </header>\n\n        {/* <h4 className={styles.videoHeading}>React Web</h4>\n        <div\n          className={isWeb ? styles.videoWrapperShow : styles.videoWrapperHide}\n        >\n          <div style={{ position: \"relative\" }}>\n            <Animate\n              sequenceIndex={3}\n              delay={0.1}\n              start={{ opacity: 0 }}\n              end={{ opacity: 1 }}\n              duration={0.4}\n              easeType=\"ease-in\"\n              render={({ style }) => (\n                <video\n                  className={styles.video}\n                  id=\"tabPanel-1\"\n                  aria-labelledby=\"tabPanel-1\"\n                  controls\n                  playsInline\n                  muted\n                  style={style}\n                >\n                  <source src={video} type=\"video/mp4\" />\n                </video>\n              )}\n            />\n          </div>\n        </div>\n\n        <div\n          className={isWeb ? styles.videoWrapperHide : styles.videoWrapperShow}\n        >\n          <h4 className={styles.videoHeading}>React Native</h4>\n          <video\n            className={styles.video}\n            id=\"tabPanel-2\"\n            aria-labelledby=\"tabPanel-2\"\n            controls\n            playsInline\n            muted\n          >\n            <source src={nativeVideo} type=\"video/mp4\" />\n          </video>\n        </div> */}\n\n        {/* <div\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          <div\n            className={styles.toggleGroup}\n            role=\"tablist\"\n            aria-label=\"Select video\"\n          >\n            <button\n              aria-label=\"show web video\"\n              aria-selected={isWeb ? \"true\" : \"false\"}\n              aria-controls=\"tabPanel-1\"\n              role=\"tab\"\n              disabled={isWeb}\n              onClick={() => {\n                setIsWeb(true)\n              }}\n            >\n              React Web\n            </button>\n            <button\n              disabled={!isWeb}\n              role=\"tab\"\n              aria-label=\"show react native video\"\n              aria-selected={!isWeb}\n              aria-controls=\"tabPanel-2\"\n              onClick={() => {\n                setIsWeb(false)\n              }}\n            >\n              React Native\n            </button>\n          </div>\n        </div> */}\n      </AnimateGroup>\n\n      {/*<Bday isCardPlay={isCardPlay} />*/}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport { AnimateGroup, AnimateKeyframes } from \"react-simple-animate\"\nimport home from \"../data/home\"\nimport generic from \"../data/generic\"\nimport { useStateMachine } from \"little-state-machine\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport styles from \"./FeatureList.module.css\"\n\nconst props = {\n  keyframes: [\n    { 0: \"opacity: 0; transform: scale(0)\" },\n    { 50: \"opacity: 0.3; transform: scale(1.3)\" },\n    { 70: \"transform: scale(0.8)\" },\n    { 100: \"transform: scale(1)\" },\n  ],\n  fillMode: \"forwards\" as \"forwards\",\n  duration: 0.3,\n}\n\nfunction FeaturesList({\n  isPlayFeature,\n  currentLanguage,\n}: {\n  isPlayFeature: boolean\n  currentLanguage: string\n}) {\n  const { state } = useStateMachine()\n  const lightMode = state?.setting?.lightMode\n\n  return (\n    <div className={styles.features}>\n      <h2 className={typographyStyles.title}>\n        {generic.features[currentLanguage]}\n      </h2>\n\n      <AnimateGroup play={isPlayFeature}>\n        <div\n          className={`${styles.featuresContent} ${\n            lightMode ? styles.lightFeaturesContent : \"\"\n          }`}\n        >\n          <article id=\"featureLast\">\n            <AnimateKeyframes {...props} sequenceIndex={0}>\n              <div\n                style={{\n                  margin: \"0 auto\",\n                  display: \"flex\",\n                  width: 45,\n                  height: 45,\n                  border: `2px solid ${lightMode ? \"#2d2d2d\" : \"white\"}`,\n                  borderRadius: \"50%\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginBottom: 21,\n                  marginTop: 4,\n                }}\n              >\n                <code\n                  style={{\n                    lineHeight: \"19px\",\n                    fontSize: \"15px\",\n                    ...(lightMode ? { color: \"#2d2d2d\", fontWeight: 800 } : {}),\n                  }}\n                >{`</>`}</code>\n              </div>\n            </AnimateKeyframes>\n            <h3>{home.features[currentLanguage][0].title}</h3>\n            <p>{home.features[currentLanguage][0].description}</p>\n          </article>\n\n          <article>\n            <AnimateKeyframes {...props} sequenceIndex={1}>\n              {/* <svg viewBox=\"0 0 512 512\">\n                <title>{home.features[currentLanguage][1].title}</title>\n                <path d=\"M108.4 0h23v22.8h21.2V0h23v69h-23V46h-21v23h-23.2M206 23h-20.3V0h63.7v23H229v46h-23M259.5 0h24.1l14.8 24.3L313.2 0h24.1v69h-23V34.8l-16.1 24.8l-16.1-24.8v34.2h-22.6M348.7 0h23v46.2h32.6V69h-55.6\" />\n                <path\n                  fill=\"#fff\"\n                  d=\"M107.6 471l-33-370.4h362.8l-33 370.2L255.7 512\"\n                />\n                <path fill=\"#fff\" d=\"M256 480.5V131H404.3L376 447\" />\n                <path\n                  fill=\"#0e101c\"\n                  d=\"M142 176.3h114v45.4h-64.2l4.2 46.5h60v45.3H154.4M156.4 336.3H202l3.2 36.3 50.8 13.6v47.4l-93.2-26\"\n                />\n                <path\n                  fill=\"#0e101c\"\n                  d=\"M369.6 176.3H255.8v45.4h109.6M361.3 268.2H255.8v45.4h56l-5.3 59-50.7 13.6v47.2l93-25.8\"\n                />\n              </svg> */}\n              <div\n                style={{\n                  margin: \"0 auto\",\n                  display: \"flex\",\n                  width: 45,\n                  height: 45,\n                  border: `2px solid ${lightMode ? \"#2d2d2d\" : \"white\"}`,\n                  borderRadius: \"50%\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  marginBottom: 21,\n                  marginTop: 4,\n                }}\n              >\n                <code\n                  style={{\n                    lineHeight: \"19px\",\n                    fontSize: \"15px\",\n                    ...(lightMode ? { color: \"#2d2d2d\", fontWeight: 800 } : {}),\n                  }}\n                >{`</>`}</code>\n              </div>\n            </AnimateKeyframes>\n            <h3>{home.features[currentLanguage][1].title}</h3>\n            <p>{home.features[currentLanguage][1].description}</p>\n          </article>\n\n          <article>\n            <AnimateKeyframes {...props} sequenceIndex={2}>\n              <svg viewBox=\"0 0 100 125\">\n                <title>{home.features[currentLanguage][2].title}</title>\n                <path d=\"M5,92.196c0,0,9.342-8.233,12.888-11.816c0.097-0.1,0.2-0.208,0.297-0.312c10.855,4.003,32.667-5.268,52.239-22.641  c0.577-0.497,0.479-0.28,1.024-0.795l-20.956-4.658l27.153-1.737l0.293-0.246C98.634,30.786,94.702,7.803,94.702,7.803  s-25.642,0.3-46.966,12.71l-1.578,20.272l-5.047-15.733c-1.352,1-1.791,1.295-3.083,2.421c-4.546,4.005-7.771,7.382-11.265,11.511  l2.401,15.721l-7.488-9.461c-9.515,13.243-12.903,25.574-7.898,31.79c-0.565,0.749-1.129,1.548-1.689,2.392  C7.368,86.518,5,92.196,5,92.196z M17.442,76.457c0,0,26.146-40.739,70.729-58.628C88.171,17.829,47.99,39.296,17.442,76.457z\" />\n              </svg>\n            </AnimateKeyframes>\n            <h3>{home.features[currentLanguage][2].title}</h3>\n            <p>{home.features[currentLanguage][2].description}</p>\n          </article>\n\n          {/* <article>\n            <AnimateKeyframes {...props} sequenceIndex={3}>\n              <svg viewBox=\"0 0 24 30\" x=\"0px\" y=\"0px\">\n                <title>{home.features[currentLanguage][3].title}</title>\n                <path d=\"M20.87469,10.47565a9.00465,9.00465,0,1,0-10.399,10.399A8.99479,8.99479,0,0,0,20.87469,10.47565ZM18.669,16.40247a1.9419,1.9419,0,0,1-2.5022.62738,8.94432,8.94432,0,0,0-8.33319-.00019,1.94287,1.94287,0,0,1-2.50366-.6289A7.95274,7.95274,0,0,1,4.09424,10.761,8.00112,8.00112,0,0,1,20,12,7.92283,7.92283,0,0,1,18.669,16.40247Zm-1.81543-9.256a.49983.49983,0,0,1,0,.707l-3.90271,3.90271A.96262.96262,0,0,1,13,12a1,1,0,1,1-1-1,.96262.96262,0,0,1,.24377.04919l3.90271-3.90271A.49983.49983,0,0,1,16.85352,7.14648Z\" />\n              </svg>\n            </AnimateKeyframes>\n\n            <h3>{home.features[currentLanguage][3].title}</h3>\n            <p>{home.features[currentLanguage][3].description}</p>\n          </article>\n\n          <article>\n            <AnimateKeyframes {...props} sequenceIndex={4}>\n              <svg viewBox=\"0 0 100 125\">\n                <title>{home.features[currentLanguage][4].title}</title>\n                <path d=\"M95.934,26.48l-3.713,8.296c-1.01,1.928-2.794,3.025-5.35,3.293h-1.395  c-1.708-0.105-3.567-0.14-5.577-0.105c-2.429,0.395-4.59,0.912-6.483,1.551c-1.511,0.5-3.027,0.576-4.55,0.227  c-0.615-0.174-1.487-0.512-2.614-1.011c-0.418-0.209-1.487-0.931-3.207-2.162c-1.789-1.29-3.485-2.329-5.089-3.119  c-1.405-0.768-4.101-2.046-8.087-3.835c-2.277-1.104-3.753-2.097-4.426-2.979c-0.663-0.895-0.75-1.976-0.262-3.242  c0.267-0.72,0.808-1.255,1.621-1.604c1.138-0.581,2.498-0.535,4.079,0.14c1.904,0.86,3.224,1.453,3.956,1.778  c1.29,0.581,3.317,1.325,6.082,2.23c0.942,0.291,1.883,0.489,2.823,0.593h1.203l-1.08-0.488c-6.356-2.916-10.533-4.799-12.531-5.647  c-1.952-0.813-3.643-0.941-5.072-0.382c-1.383,0.581-2.335,1.417-2.858,2.509c-0.279,0.616-0.471,1.447-0.575,2.492  c-0.744-0.046-2.26-0.111-4.549-0.192c-4.799,2.313-7.401,3.544-7.808,3.695c-0.941,0.314-1.906,0.488-2.893,0.523  c-1.081-0.024-1.876-0.216-2.388-0.576c-0.604-0.255-1.034-0.895-1.29-1.917c-0.175-1.047,0.737-2.179,2.736-3.399l10.596-6.867  c5.101-0.603,10.08-1.423,14.937-2.457c1.068-0.244,2.103-0.145,3.102,0.296c3.115,1.604,6.659,3.23,10.632,4.88  c1.977,0.813,3.887,1.575,5.734,2.284c3.277,1.057,6.024,1.667,8.244,1.83h0.018c2.439,0.023,7.784-0.941,16.034-2.894  C98.606,19.631,98.606,21.717,95.934,26.48z\" />\n                <path d=\"M25.73,31.831c3.405,5.019,6.298,10.091,8.68,15.215  c3.764,8.168,5.49,15.047,5.176,20.636c-0.058,0.302-0.209,0.604-0.453,0.906c-0.348,0.384-0.604,0.61-0.767,0.68  c-4.276,1.371-8.511,1.731-12.706,1.081c-6.309-1.139-11.741-4.619-16.295-10.439c0.825-7.576,2.347-13.485,4.566-17.726  l2.962-4.113C19.567,35.154,22.512,33.075,25.73,31.831z\" />\n                <path d=\"M79.011,48.388c-0.709-0.917-1.587-1.476-2.632-1.672  c-9.572,0.235-14.992-1.101-16.261-4.009c-2.406-5.798-6.397-9.499-11.974-11.102c-5.577-1.592-11.648-0.93-18.213,1.986  c2.893,4.613,5.287,9.132,7.18,13.56c3.509,7.878,5.072,14.617,4.688,20.218c0,1.022-0.389,1.992-1.167,2.91  c-0.686,0.93-1.511,1.546-2.475,1.849c-3.01,1.01-7.129,1.301-12.357,0.871c-5.24-0.442-10.904-3.167-16.993-8.175  c-1.385,6.83-2.799,11.271-4.244,13.324c14.306,8.29,28.217,12.767,41.733,13.429c2.091-7.355,3.184-11.137,3.277-11.346  c0.523-1.36,0.837-2.133,0.941-2.318c0.244-0.406,0.546-0.784,0.906-1.133c0.789-0.778,1.69-1.243,2.702-1.395  c5.959-0.813,11.095-2.66,15.406-5.542c6.519-4.321,9.997-10.521,10.439-18.597C80.063,50.224,79.742,49.271,79.011,48.388z   M53.181,50.445c-0.686,0.674-1.51,1.01-2.475,1.01c-0.988,0-1.818-0.336-2.493-1.01c-0.685-0.674-1.028-1.505-1.028-2.492  c0-0.977,0.343-1.802,1.028-2.475c0.674-0.674,1.504-1.012,2.493-1.012c0.965,0,1.789,0.337,2.475,1.012  c0.675,0.673,1.012,1.498,1.012,2.475C54.192,48.939,53.855,49.771,53.181,50.445z\" />\n              </svg>\n            </AnimateKeyframes>\n            <h3>{home.features[currentLanguage][4].title}</h3>\n            <p>{home.features[currentLanguage][4].description}</p>\n          </article> */}\n        </div>\n      </AnimateGroup>\n    </div>\n  )\n}\n\nexport default React.memo(FeaturesList)\n","import * as React from \"react\"\nimport { navigate } from \"@reach/router\"\nimport Header from \"./Header\"\nimport UsageSection from \"./UsageSection\"\nimport FooterContent from \"./Footer\"\nimport Builder from \"./BuilderPage\"\nimport FeaturesList from \"./FeaturesList\"\nimport { useStateMachine } from \"little-state-machine\"\nimport home from \"../data/home\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport containerStyles from \"../styles/container.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./HomePage.module.css\"\nconst { useState, useRef, useEffect } = React\n\nconst options = {\n  rootMargin: \"0px 0px\",\n  threshold: [1],\n}\n\nfunction HomePage({\n  location,\n  defaultLang,\n}: {\n  location: {\n    search: string\n    pathname: string\n  }\n  defaultLang: string\n}) {\n  const [showBuilder, toggleBuilder] = useState(false)\n  const HomeRef = useRef(null)\n  const [isPlayFeature, setFeaturePlay] = useState(false)\n  const [isPlayCodeCompare, setCodeComparePlay] = useState(false)\n  const [isIsolatePlay, setIsolatePlay] = useState(false)\n  const [isCardPlay, setCardPlay] = useState(false)\n  const [isPlayRender, setRenderPlay] = useState(false)\n  const [formUpdated, setFormUpdated] = useState(false)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n\n  useEffect(() => {\n    if (location.search.startsWith(\"?goToDemo\")) {\n      setTimeout(() => {\n        HomeRef.current.scrollIntoView({ behavior: \"smooth\" })\n\n        if (location.search.startsWith(\"?goToDemo&updated=true\")) {\n          setFormUpdated(true)\n        }\n      }, 100)\n    }\n\n    if (!IntersectionObserver) {\n      setFeaturePlay(true)\n      setCodeComparePlay(true)\n    }\n\n    const featureList = document.querySelector(\"#featureLast\")\n    const codeComparison = document.querySelector(\"#codeComparison\")\n    const rendering = document.querySelector(\"#rendering\")\n    const isolate = document.querySelector(\"#isolate\")\n    const card = document.querySelector(\"#card\")\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.target === featureList && !isPlayFeature) {\n            setFeaturePlay(true)\n          }\n          if (entry.target === codeComparison && !isPlayCodeCompare) {\n            setCodeComparePlay(true)\n          }\n          if (entry.target === rendering && !isPlayRender) {\n            setRenderPlay(true)\n          }\n          if (entry.target === isolate && !isIsolatePlay) {\n            setIsolatePlay(true)\n          }\n          // if (entry.target === card && !isCardPlay) {\n          //   setCardPlay(true)\n          // }\n        }\n      })\n    }, options)\n\n    observer.observe(featureList)\n    // observer.observe(codeComparison)\n    // observer.observe(rendering)\n    // observer.observe(isolate)\n    // observer.observe(card)\n    return () => observer.disconnect()\n  }, [])\n\n  return (\n    <div className={styles.root}>\n      {showBuilder && (\n        <Builder\n          showBuilder\n          toggleBuilder={toggleBuilder}\n          HomeRef={HomeRef}\n          defaultLang={defaultLang}\n        />\n      )}\n\n      <Header\n        isCardPlay={isCardPlay}\n        homeRef={HomeRef}\n        defaultLang={defaultLang}\n      />\n\n      <FeaturesList\n        isPlayFeature={isPlayFeature}\n        currentLanguage={currentLanguage}\n      />\n\n      <UsageSection\n        isPlayCodeCompare={isPlayCodeCompare}\n        currentLanguage={currentLanguage}\n      />\n\n      <div ref={HomeRef} />\n\n      <section className={containerStyles.centerContent}>\n        <h1 className={typographyStyles.h1}>\n          {home.findInteresting[currentLanguage].heading}\n        </h1>\n        <p>{home.findInteresting[currentLanguage].description}</p>\n        <div\n          className={buttonStyles.buttonsGroup}\n          style={{\n            maxWidth: 602,\n          }}\n        >\n          <button\n            className={buttonStyles.primaryButton}\n            onClick={() => {\n              navigate(translateLink(\"get-started-with-templates\", currentLanguage))\n            }}\n          >\n            {home.getStartedWithTemplates[currentLanguage]}\n          </button>\n          <button\n            className={buttonStyles.primaryButton}\n            onClick={() => {\n              navigate(translateLink(\"get-started-with-examples\", currentLanguage))\n            }}\n          >\n            {home.getStartedWithExamples[currentLanguage]}\n          </button>\n        </div>\n      </section>\n\n      <FooterContent currentLanguage={currentLanguage} />\n    </div>\n  )\n}\n\nexport default React.memo(HomePage)\n","import * as React from \"react\"\nimport formikCode from \"./codeExamples/formikCode\"\nimport reactHookFormCode from \"./codeExamples/reactHookFormCode\"\nimport reduxFormCode from \"./codeExamples/reduxFormCode\"\nimport CodeArea from \"./CodeArea\"\nimport { AnimateGroup, Animate } from \"react-simple-animate\"\nimport colors from \"../styles/colors\"\nimport home from \"../data/home\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport containerStyles from \"../styles/container.module.css\"\nimport styles from \"./CodeCompareSection.module.css\"\nimport { useStateMachine } from \"little-state-machine\"\nimport copyClipBoard from \"./utils/copyClipBoard\"\nimport generic from \"../data/generic\"\nimport codeAreaStyles from \"./CodeArea.module.css\"\n\nconst props = {\n  start: { transform: \"translateY(100px)\" },\n  end: { transform: \"translateY(0)\" },\n  easeType: \"ease-in\",\n}\n\nfunction CodeCompareSection({\n  isPlayCodeCompare,\n  currentLanguage,\n}: {\n  isPlayCodeCompare: boolean\n  currentLanguage: string\n}) {\n  const [showFullScreen, setFullScreen] = React.useState(false)\n\n  const { state } = useStateMachine()\n  const lightMode = state?.setting?.lightMode\n\n  return (\n    <AnimateGroup play={isPlayCodeCompare}>\n      <div\n        style={{\n          marginBottom: 40,\n        }}\n      >\n        <div className={containerStyles.centerContent} id=\"installation\">\n          <h1 className={typographyStyles.h1}>\n            {home.usage[currentLanguage].title}\n          </h1>\n\n          {home.usage[currentLanguage].description1}\n\n          <p id=\"codeComparison\" className={styles.codeComparison}>\n            <span\n              className={`${styles.installCode} ${\n                lightMode ? styles.lightInstallCode : \"\"\n              }`}\n            >\n              npm install --global @create-next-app/core\n              <button\n                className={styles.copyButton}\n                onClick={() => {\n                  copyClipBoard(\"npm install --global @create-next-app/core\")\n                  alert(generic.copied[currentLanguage])\n                }}\n              >\n                <span className={codeAreaStyles.copyIcon}>\n                  <span />\n                </span>{\" \"}\n                {generic.copy[currentLanguage]}\n              </button>\n            </span>\n          </p>\n\n          <div style={{ marginTop: 30 }}>\n            {home.usage[currentLanguage].description2}\n            <p id=\"codeComparison\" className={styles.codeComparison}>\n              <span\n                className={`${styles.installCode} ${\n                  lightMode ? styles.lightInstallCode : \"\"\n                }`}\n              >\n                yarn global add @create-next-app/core\n                <button\n                  className={styles.copyButton}\n                  onClick={() => {\n                    copyClipBoard(\"yarn global add @create-next-app/core\")\n                    alert(generic.copied[currentLanguage])\n                  }}\n                >\n                  <span className={codeAreaStyles.copyIcon}>\n                    <span />\n                  </span>{\" \"}\n                  {generic.copy[currentLanguage]}\n                </button>\n              </span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </AnimateGroup>\n  )\n}\n\nexport default React.memo(CodeCompareSection)\n"],"sourceRoot":""}
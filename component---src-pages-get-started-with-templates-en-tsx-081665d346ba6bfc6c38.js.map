{"version":3,"sources":["webpack:///./src/components/TemplateHeader.tsx","webpack:///./src/components/TemplateContent.tsx","webpack:///./src/components/GetStartedWithTemplatesPage.tsx","webpack:///./src/data/en/getStartedWithTemplate.tsx","webpack:///./src/pages/get-started-with-templates.en.tsx","webpack:///./src/data/en/getStarted.tsx","webpack:///./src/data/getStarted.tsx"],"names":["getStartedContent","Header","homeRef","defaultLang","React","language","useStateMachine","state","currentLanguage","getStarted","setting","lightMode","play","className","styles","head","id","sequenceIndex","duration","start","transform","opacity","end","easeType","render","style","typographyStyles","heading","logoHeading","header","title","subHeading","marginBottom","maxWidth","home","slogan","errorStyle","border","colors","secondary","background","errorPink","borderLeft","lightPink","isPlayCodeCompare","template","setTemplate","containerStyles","centerContent","h1","install","description1","codeComparison","marginTop","width","paddingLeft","height","onChange","event","target","value","description2","installCode","lightInstallCode","copyButton","onClick","copyClipBoard","alert","generic","copied","codeAreaStyles","copyIcon","copy","useState","useRef","useEffect","location","showBuilder","toggleBuilder","HomeRef","isCardPlay","setFormUpdated","search","startsWith","setTimeout","current","scrollIntoView","behavior","root","TemplateContent","ref","Footer","GetStartedwithTemplates","getStartedWithTemplate","GetStartedWithTemplatesPage","installation","description","video","linkTitle","example","register","note","to","applyValidation","href","rel","translateLink","adapting","controlledInput","workWithUI","CodeArea","rawData","uiLibraryHookInput","globalState","reactNative","typeScript","errors","en","getStartedEn","es","getStartedEs","pt","getStartedPt","kr","getStartedKr","jp","getStartedJp","zh","getStartedZh","ru","getStartedRu"],"mappings":"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","file":"component---src-pages-get-started-with-templates-en-tsx-081665d346ba6bfc6c38.js","sourcesContent":["import * as React from \"react\"\nimport { Animate, AnimateGroup } from \"react-simple-animate\"\nimport { navigate } from \"@reach/router\"\nimport Bday from \"./Bday\"\n// @ts-ignore\nimport video from \"../images/react-hook-form-demo-video.mp4\"\n// @ts-ignore\nimport nativeVideo from \"../images/react-hook-form-native-demo-video.mp4\"\nimport home from \"../data/home\"\nimport { useStateMachine } from \"little-state-machine\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./Header.module.css\"\nimport codeAreaStyles from \"./CodeArea.module.css\"\nimport generic from \"../data/generic\"\nimport copyClipBoard from \"./utils/copyClipBoard\"\nimport getStartedContent from \"../data/getStarted\"\nconst getStartedEn = getStartedContent[\"en\"]\n\nconst LogoSvg = (\n  <>\n    <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n    <path\n      style={{ transform: \"translateX(-25px)\" }}\n      d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n    />\n    <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n    <path\n      style={{ transform: \"translateX(-25px)\" }}\n      d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n    />\n    <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n  </>\n)\n\nexport default function Header({\n  homeRef,\n  defaultLang,\n}: // isCardPlay,\n{\n  homeRef: React.Ref<HTMLDivElement>\n  defaultLang: string\n  // isCardPlay: boolean\n}) {\n  const [isWeb, setIsWeb] = React.useState(true)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const {\n    state\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n  const lightMode = state?.setting?.lightMode\n  const getStarted = getStartedContent[currentLanguage]\n\n  return (\n    <>\n      <AnimateGroup play>\n        <header className={styles.head} id=\"main\">\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <h1\n                className={`${typographyStyles.heading} ${styles.logoHeading}`}\n                style={style}\n              >\n                {getStarted.header.title}\n              </h1>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={1}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <p\n                className={typographyStyles.subHeading}\n                style={{ marginBottom: 0, maxWidth: 660, ...style }}\n              >\n                {home.slogan[currentLanguage]}\n              </p>\n            )}\n          />\n          \n        </header>\n      </AnimateGroup>\n      {/*<Bday isCardPlay={isCardPlay} />*/}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport formikCode from \"./codeExamples/formikCode\"\nimport reactHookFormCode from \"./codeExamples/reactHookFormCode\"\nimport reduxFormCode from \"./codeExamples/reduxFormCode\"\nimport CodeArea from \"./CodeArea\"\nimport { AnimateGroup, Animate } from \"react-simple-animate\"\nimport colors from \"../styles/colors\"\nimport home from \"../data/home\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport containerStyles from \"../styles/container.module.css\"\nimport styles from \"./CodeCompareSection.module.css\"\nimport { useStateMachine } from \"little-state-machine\"\nimport copyClipBoard from \"./utils/copyClipBoard\"\nimport generic from \"../data/generic\"\nimport codeAreaStyles from \"./CodeArea.module.css\"\nimport getStartedContent from \"../data/getStarted\"\nconst getStartedEn = getStartedContent[\"en\"]\nimport formFieldsStyles from \"./FormFields.module.css\"\n\nconst props = {\n  start: { transform: \"translateY(100px)\" },\n  end: { transform: \"translateY(0)\" },\n  easeType: \"ease-in\",\n}\n\nconst errorStyle = {\n  border: `1px solid ${colors.secondary}`,\n  background: colors.errorPink,\n  borderLeft: `10px solid ${colors.lightPink}`,\n}\n\nfunction CodeCompareSection({\n  isPlayCodeCompare,\n  currentLanguage,\n}: {\n  isPlayCodeCompare: boolean\n  currentLanguage: string\n}) {\n  const [showFullScreen, setFullScreen] = React.useState(false)\n  const [template, setTemplate] = React.useState('default')\n\n  const { state } = useStateMachine()\n  const lightMode = state?.setting?.lightMode\n  const getStarted = getStartedContent[currentLanguage]\n\n  const handleOnChange = (event) => {\n    setTemplate(event.target.value)\n  }\n\n  return (\n    <AnimateGroup play={isPlayCodeCompare}>\n      <div\n        style={{\n          marginBottom: 40,\n        }}\n      >\n        <div className={containerStyles.centerContent}>\n          <h1 className={typographyStyles.h1}>\n            {/* {home.usage[currentLanguage].title} */}\n            {getStarted.install.title}\n          </h1>\n\n          <p>\n            {getStarted.install.description1}\n          </p>\n\n          <p\n            id=\"codeComparison\"\n            className={styles.codeComparison}\n            style={{ marginTop: 20}}\n          >\n            <select\n              style={{\n                width: '100%',\n                ...errorStyle,\n                paddingLeft: 10,\n                height: 50,\n              }}\n              onChange={handleOnChange}\n            >\n              <option value=\"default\">default</option>\n              {/* <option value=\"material\">material</option> */}\n              <option value=\"bootstrap\">bootstrap</option>\n              <option value=\"semantic\">semantic</option>\n            </select>\n          </p>\n\n          <div style={{ marginTop: 30 }}>\n            <p>{getStarted.install.description2}</p>\n            <p id=\"codeComparison\" className={styles.codeComparison}>\n              <span\n                className={`${styles.installCode} ${\n                  lightMode ? styles.lightInstallCode : \"\"\n                }`}\n              >\n                create-next-app my-app --template {template}\n                <button\n                  className={styles.copyButton}\n                  onClick={() => {\n                    copyClipBoard(`create-next-app my-app --template ${template}`)\n                    alert(generic.copied[currentLanguage])\n                  }}\n                >\n                  <span className={codeAreaStyles.copyIcon}>\n                    <span />\n                  </span>{\" \"}\n                  {generic.copy[currentLanguage]}\n                </button>\n              </span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </AnimateGroup>\n  )\n}\n\nexport default React.memo(CodeCompareSection)\n","import * as React from \"react\"\nimport TemplateHeader from \"./TemplateHeader\"\nimport TemplateContent from \"./TemplateContent\"\nimport FooterContent from \"./Footer\"\nimport Builder from \"./BuilderPage\"\nimport { useStateMachine } from \"little-state-machine\"\nimport styles from \"./HomePage.module.css\"\nimport getStartedContent from \"../data/getStarted\"\n\nconst { useState, useRef, useEffect } = React\nconst getStartedEn = getStartedContent[\"en\"]\n\nconst options = {\n  rootMargin: \"0px 0px\",\n  threshold: [1],\n}\n\nfunction HomePage({\n  location,\n  defaultLang,\n}: {\n  location: {\n    search: string\n    pathname: string\n  }\n  defaultLang: string\n}) {\n  const [submitData, updateSubmitData] = useState({})\n  const [showBuilder, toggleBuilder] = useState(false)\n  const HomeRef = useRef(null)\n  const [isPlayFeature, setFeaturePlay] = useState(false)\n  const [isPlayCodeCompare, setCodeComparePlay] = useState(false)\n  const [isIsolatePlay, setIsolatePlay] = useState(false)\n  const [isCardPlay, setCardPlay] = useState(false)\n  const [isPlayRender, setRenderPlay] = useState(false)\n  const [formUpdated, setFormUpdated] = useState(false)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n\n  useEffect(() => {\n    if (location.search.startsWith(\"?goToDemo\")) {\n      setTimeout(() => {\n        HomeRef.current.scrollIntoView({ behavior: \"smooth\" })\n\n        if (location.search.startsWith(\"?goToDemo&updated=true\")) {\n          setFormUpdated(true)\n        }\n      }, 100)\n    }\n\n    // if (!IntersectionObserver) {\n    //   setFeaturePlay(true)\n    //   setCodeComparePlay(true)\n    // }\n\n    // const featureList = document.querySelector(\"#featureLast\")\n    // const codeComparison = document.querySelector(\"#codeComparison\")\n    // const rendering = document.querySelector(\"#rendering\")\n    // const isolate = document.querySelector(\"#isolate\")\n    // const card = document.querySelector(\"#card\")\n\n    // const observer = new IntersectionObserver((entries) => {\n    //   entries.forEach((entry) => {\n    //     if (entry.isIntersecting) {\n    //       if (entry.target === featureList && !isPlayFeature) {\n    //         setFeaturePlay(true)\n    //       }\n    //       if (entry.target === codeComparison && !isPlayCodeCompare) {\n    //         setCodeComparePlay(true)\n    //       }\n    //       if (entry.target === rendering && !isPlayRender) {\n    //         setRenderPlay(true)\n    //       }\n    //       if (entry.target === isolate && !isIsolatePlay) {\n    //         setIsolatePlay(true)\n    //       }\n    //       // if (entry.target === card && !isCardPlay) {\n    //       //   setCardPlay(true)\n    //       // }\n    //     }\n    //   })\n    // }, options)\n\n    // // observer.observe(featureList)\n    // // observer.observe(codeComparison)\n    // // observer.observe(rendering)\n    // // observer.observe(isolate)\n    // // observer.observe(card)\n\n    // return () => observer.disconnect()\n  }, [])\n\n  return (\n    <div className={styles.root}>\n      {showBuilder && (\n        <Builder\n          showBuilder\n          toggleBuilder={toggleBuilder}\n          HomeRef={HomeRef}\n          defaultLang={defaultLang}\n        />\n      )}\n\n      <TemplateHeader\n        isCardPlay={isCardPlay}\n        homeRef={HomeRef}\n        defaultLang={defaultLang}\n      />\n\n      <TemplateContent\n        isPlayCodeCompare={isPlayCodeCompare}\n        currentLanguage={currentLanguage}\n      />\n      \n      <div ref={HomeRef} />\n\n      <FooterContent currentLanguage={currentLanguage} />\n    </div>\n  )\n}\n\nexport default React.memo(HomePage)\n","import * as React from \"react\"\n\nexport default {\n  title: \"Get Started with Next.js Templates\",\n}\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport GetStartedWithTemplatesPage from \"../components/GetStartedWithTemplatesPage\"\nimport getStartedWithTemplate from \"../data/en/getStartedWithTemplate\"\n\nconst GetStartedwithTemplates = ({\n  location,\n}: {\n  location: {\n    search: string\n    pathname: string\n    hash: string\n  }\n}) => (\n  <Layout location={location} defaultLang=\"en\">\n    <Seo title={getStartedWithTemplate.title} location={location} />\n    <GetStartedWithTemplatesPage location={location} defaultLang=\"en\" />\n  </Layout>\n)\n\nexport default GetStartedwithTemplates\n","import * as React from \"react\"\nimport code from \"../../components/codeExamples/defaultExample\"\nimport { Link } from \"@reach/router\"\nimport translateLink from \"../../components/logic/translateLink\"\nimport CodeArea from \"../../components/CodeArea\"\nimport { uiLibraryHookInput } from \"../../components/codeExamples/getStarted\"\nimport typographyStyles from \"../../styles/typography.module.css\"\n\nexport default {\n  title: \"Get Started with Templates\",\n  installation: \"Install Create Next App\",\n  header: {\n    title: \"Get Started with Templates\",\n    description: \"Set up a Next.js app by running one command.\",\n  },\n  video: {\n    title: \"Video Tutorial\",\n    description: `This video tutorial illustrates the basic usage and concepts of React Hook Form.`,\n  },\n  install: {\n    linkTitle: \"Create a Next App in Seconds\",\n    title: \"Create a Next App in Seconds\",\n    description1: `You can create an app using any of the templates:`,\n    description2: `Run command to create an app:`,\n  },\n  example: {\n    title: \"Example\",\n    description: `The following code excerpt demonstrates a basic usage example:`,\n  },\n  register: {\n    title: \"Register fields\",\n    description: (\n      <>\n        <p>\n          One of the key concepts in React Hook Form is to{\" \"}\n          <strong>\n            <code>register</code>\n          </strong>{\" \"}\n          your uncontrolled component into the Hook. This will make its value\n          available for both the form validation and submission.\n        </p>\n\n        <p>\n          <b className={typographyStyles.note}>Note:</b> Each field is{\" \"}\n          <strong>required</strong> to have a unique <code>name</code> as a key\n          for the registration process.\n        </p>\n\n        <p>\n          <b className={typographyStyles.note}>Note: </b>React Native will\n          require you to either use a manual register command:{\" \"}\n          <code>{`register({ name: 'test' }, { required: true })`}</code> or a{\" \"}\n          <Link to=\"/api#Controller\">Controller</Link> to wrap and register your\n          component automatically. Learn more in the dedicated section for{\" \"}\n          <Link to=\"/api/#ReactNative\">React Native</Link>.\n        </p>\n      </>\n    ),\n  },\n  applyValidation: {\n    title: \"Apply validation\",\n    description: (currentLanguage) => (\n      <>\n        <p>\n          React Hook Form makes form validation easy by aligning with the\n          existing{\" \"}\n          <a\n            href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            HTML standard for form validation\n          </a>\n          .\n        </p>\n\n        <p>List of validation rules supported:</p>\n        <ul>\n          <li>required</li>\n          <li>min</li>\n          <li>max</li>\n          <li>minLength</li>\n          <li>maxLength</li>\n          <li>pattern</li>\n          <li>validate</li>\n        </ul>\n        <p>\n          You can read more detail on each rule in the{\" \"}\n          <Link to={translateLink(\"api#register\", currentLanguage)}>\n            register section\n          </Link>\n          .\n        </p>\n      </>\n    ),\n  },\n  adapting: {\n    title: \"Adapting existing form\",\n    description: (\n      <>\n        Working on an existing form is simple. The important step is to apply{\" \"}\n        <code>register</code> into existing component's <code>ref</code>.\n      </>\n    ),\n  },\n  controlledInput: {\n    title: \"Controlled Input\",\n    description: (\n      <>\n        <p>\n          React Hook Form embrace uncontrolled components and native HTML\n          inputs, however it's hard to avoid working with external controlled\n          component such as{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/JedWatson/react-select\"\n          >\n            React-Select\n          </a>\n          ,{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/ant-design/ant-design\"\n          >\n            AntD\n          </a>{\" \"}\n          and{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://material-ui.com/\"\n          >\n            Material-UI\n          </a>\n          , hence we have built a wrapper component:{\" \"}\n          <Link to=\"/api#Controller\">Controller</Link> to streamline the\n          integration process while still giving you the freedom to use custom\n          register with your needs.\n        </p>\n        <p>\n          Read more about the <Link to=\"/api#Controller\">Controller</Link>{\" \"}\n          component.\n        </p>\n      </>\n    ),\n  },\n  workWithUI: {\n    title: \"Work with UI library\",\n    description: (currentLanguage) => (\n      <>\n        <p>\n          React Hook Form has made it easy to integrate with external UI\n          component libraries. You can check out{\" \"}\n          <a\n            href=\"https://www.youtube.com/watch?v=0nDGeQKLFjo\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            this video tutorial\n          </a>{\" \"}\n          on how to work with MUI.\n        </p>\n        <p>\n          <b className={typographyStyles.note}>Option 1:</b> The best way is to\n          check if the component you wish to use exposes an{\" \"}\n          <code>innerRef</code> or <code>ref</code> that can be used to{\" \"}\n          <code>\n            <Link to={translateLink(\"api#register\", currentLanguage)}>\n              register\n            </Link>\n          </code>\n          . For example: Material-UI's <code>TextField</code> accepts{\" \"}\n          <code>inputRef</code> as one of its props. You can simply pass{\" \"}\n          <code>register</code> to it.\n        </p>\n        <p>\n          <code>\n            {\n              '<TextField inputRef={register} label=\"First name\" name=\"FirstName\"/>'\n            }\n          </code>\n        </p>\n        <p>\n          <b className={typographyStyles.note}>Option 2:</b> Sometimes\n          components don't expose a prop to register, for example{\" \"}\n          <code>react-select</code> or <code>react-datepicker</code>.\n        </p>\n        <p>\n          The second easiest way is to use the{\" \"}\n          <Link to=\"/api#Controller\">Controller</Link> wrapper component, which\n          will take care of the registration process for you.\n        </p>\n        <CodeArea rawData={uiLibraryHookInput} />\n        <p>\n          <b className={typographyStyles.note}>Option 3:</b> Lastly we can set\n          up a custom register using the{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://reactjs.org/docs/hooks-effect.html\"\n          >\n            useEffect\n          </a>{\" \"}\n          Hook and update the value via{\" \"}\n          <code>\n            <Link to={translateLink(\"api#setValue\", currentLanguage)}>\n              setValue\n            </Link>\n          </code>\n          .\n        </p>\n      </>\n    ),\n  },\n  globalState: {\n    title: \"Integrate global state\",\n    description: `React Hook Form doesn't require you to rely on a state management library such as Redux to store your data, but you can easily integrate with it:`,\n  },\n  reactNative: {\n    title: \"React Native\",\n    description: (\n      <p>\n        You will get the same performance enhancement from an Uncontrolled\n        Component. However, there are certain APIs which are not compatible with\n        React Native (due to the API differences between web and native). You\n        will have to use a <b>manual register</b> as shown in the following\n        example.\n      </p>\n    ),\n  },\n  typeScript: {\n    title: \"TypeScript\",\n    description: (\n      <p>\n        React Hook Form is built with <code>Typescript</code>, so you can define\n        a <code>FormData</code> type to support form values.\n      </p>\n    ),\n  },\n  errors: {\n    title: \"Handle errors\",\n    description: (\n      <>\n        React Hook Form provides an <code>errors</code> object to show you the\n        errors in the form.\n      </>\n    ),\n  },\n}\n","import getStartedEn from \"../data/en/getStarted\"\nimport getStartedEs from \"../data/es/getStarted\"\nimport getStartedPt from \"../data/pt/getStarted\"\nimport getStartedZh from \"../data/zh/getStarted\"\nimport getStartedJp from \"../data/jp/getStarted\"\nimport getStartedKr from \"../data/kr/getStarted\"\nimport getStartedRu from \"../data/ru/getStarted\"\n\nexport default {\n  en: getStartedEn,\n  es: getStartedEs,\n  pt: getStartedPt,\n  kr: getStartedKr,\n  jp: getStartedJp,\n  zh: getStartedZh,\n  ru: getStartedRu,\n}\n"],"sourceRoot":""}